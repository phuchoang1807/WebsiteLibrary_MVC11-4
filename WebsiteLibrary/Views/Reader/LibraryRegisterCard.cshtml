@model WebsiteLibrary.Models.Entities.Account
@{
    ViewBag.Title = "Đăng Ký Thẻ Thư Viện";
    Layout = "~/Views/Shared/_LayoutReader.cshtml";
}

<!-- Library Register Card Section -->
<section class="ftco-section library-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 ftco-animate">
                <h2 class="library-section-title text-center mb-4">Đăng Ký Thẻ Thư Viện</h2>
                <div class="library-register-content">
                    @if (Model == null)
                    {
                        <p class="library-register-note text-center">Không thể tải thông tin độc giả. Vui lòng quay lại trang cá nhân.</p>
                    }
                    else
                    {
                        <form id="paymentForm" method="post">
                            <div class="form-group">
                                <label for="accountId">Mã độc giả</label>
                                <input type="text" class="form-control" id="accountId" value="@Model.ID" readonly>
                            </div>
                            <div class="form-group">
                                <label for="readerName">Họ và tên</label>
                                <input type="text" class="form-control" id="readerName" value="@Model.Name" readonly>
                            </div>
                            <div class="form-group">
                                <label for="registerDate">Ngày đăng ký</label>
                                <input type="text" class="form-control" id="registerDate" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly>
                            </div>
                            <div class="form-group">
                                <label for="expiryDate">Ngày hết hạn</label>
                                @{
                                    var registerDate = DateTime.Now;
                                    var expiryDate = new DateTime(registerDate.Year, 12, 31); // Ngày cuối cùng của năm đăng ký
                                }
                                <input type="text" class="form-control" id="expiryDate" value="@expiryDate.ToString("dd/MM/yyyy")" readonly>
                            </div>
                            <div class="form-group">
                                <label for="cardPhoto">Ảnh thẻ (3x4) <span style="color: red;">*</span></label>
                                <input type="file" class="form-control-file" id="cardPhoto" accept="image/*" required>
                            </div>
                            <div class="text-center">
                                <button type="submit" class="library-save-button btn py-3 px-5">Thanh Toán</button>
                            </div>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/js/all.min.js"></script>
    @Html.AntiForgeryToken()
    <script>
        document.getElementById('paymentForm').addEventListener('submit', function (e) {
            e.preventDefault(); // Ngăn submit mặc định để xử lý upload ảnh trước

            const accountId = document.getElementById('accountId').value;
            const readerName = document.getElementById('readerName').value;
            const registerDate = document.getElementById('registerDate').value;
            const expiryDate = document.getElementById('expiryDate').value;
            const cardPhotoInput = document.getElementById('cardPhoto');

            // Kiểm tra xem ảnh thẻ đã được upload chưa
            if (!cardPhotoInput.files.length) {
                alert('Vui lòng upload ảnh thẻ trước khi thanh toán!');
                return;
            }

            // Tính số quý còn lại trong năm
            const [day, month, year] = registerDate.split('/').map(Number);
            const regDate = new Date(year, month - 1, day); // Tháng trong JS tính từ 0
            const currentMonth = regDate.getMonth(); // Tháng từ 0-11
            let remainingQuarters = 0;

            if (currentMonth >= 0 && currentMonth <= 2) { // Quý 1 (Tháng 1-3)
                remainingQuarters = 4; // Cả 4 quý (bao gồm quý 1)
            } else if (currentMonth >= 3 && currentMonth <= 5) { // Quý 2 (Tháng 4-6)
                remainingQuarters = 3; // Còn 3 quý (quý 2, 3, 4)
            } else if (currentMonth >= 6 && currentMonth <= 8) { // Quý 3 (Tháng 7-9)
                remainingQuarters = 2; // Còn 2 quý (quý 3, 4)
            } else if (currentMonth >= 9 && currentMonth <= 11) { // Quý 4 (Tháng 10-12)
                remainingQuarters = 1; // Còn 1 quý (quý 4)
            }

            // Tính số tiền: 1 quý = 30k
            const amount = remainingQuarters * 30; // Số tiền tính bằng nghìn đồng

            const formData = new FormData();
            formData.append('cardPhoto', cardPhotoInput.files[0]);

            fetch('/Reader/SubmitCardRequest', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! Status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // Lưu dữ liệu vào localStorage, bao gồm filePath
                        const cardRequestData = {
                            accountId: accountId,
                            readerName: readerName,
                            registerDate: registerDate,
                            expiryDate: expiryDate,
                            amount: amount,
                            cardPhotoUrl: data.filePath // Lưu đường dẫn ảnh
                        };
                        localStorage.setItem('cardRequestData', JSON.stringify(cardRequestData));
                        alert(data.message); // Hiển thị thông báo từ server
                        window.location.href = data.redirectUrl; // Chuyển hướng đến trang thanh toán
                    } else {
                        alert('Lỗi: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error uploading photo:', error);
                    alert('Lỗi khi gửi yêu cầu đăng ký thẻ: ' + error.message);
                });
        });
    </script>
}